// <auto-generated />
using System;
using AuctionBot.Db.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionBot.Db.Migrations
{
    [DbContext(typeof(AuctionBotDbContext))]
    [Migration("20240120133656_CreateTableUserAuction")]
    partial class CreateTableUserAuction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionBot.Db.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuyerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.ToTable("Auctions", (string)null);
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(6703),
                            IsDeleted = false,
                            Name = "Овощи",
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(6704)
                        },
                        new
                        {
                            Id = 2,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(6706),
                            IsDeleted = false,
                            Name = "Фрукты",
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(6706)
                        });
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(9310),
                            IsDeleted = false,
                            Name = "Огурцы",
                            Price = 12m,
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(9312),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(9319),
                            IsDeleted = false,
                            Name = "Абрикосы",
                            Price = 10m,
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(9319),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("AuctionBot.Db.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TelegramCommand")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte?>("Role")
                        .HasColumnType("smallint");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer");

                    b.Property<long>("TelegramUserChatId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(5664),
                            IsDeleted = false,
                            Name = "@edgerun",
                            Role = (byte)2,
                            TelegramUserChatId = 1L,
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(5661)
                        },
                        new
                        {
                            Id = 2,
                            CreateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(5669),
                            IsDeleted = false,
                            Name = "@alextir2",
                            Role = (byte)1,
                            TelegramUserChatId = 2L,
                            UpdateDt = new DateTime(2024, 1, 20, 13, 36, 56, 519, DateTimeKind.Utc).AddTicks(5669)
                        });
                });

            modelBuilder.Entity("AuctionBot.Db.Models.UserAuction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuctionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdateDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAuctions", (string)null);
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Auction", b =>
                {
                    b.HasOne("AuctionBot.Db.Models.Product", "Product")
                        .WithMany("Auctions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuctionBot.Db.Models.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Image", b =>
                {
                    b.HasOne("AuctionBot.Db.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Product", b =>
                {
                    b.HasOne("AuctionBot.Db.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuctionBot.Db.Models.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.User", b =>
                {
                    b.HasOne("AuctionBot.Db.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("State");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.UserAuction", b =>
                {
                    b.HasOne("AuctionBot.Db.Models.Auction", "Auction")
                        .WithMany("UserAuctions")
                        .HasForeignKey("AuctionId");

                    b.HasOne("AuctionBot.Db.Models.User", "User")
                        .WithMany("UserAuctions")
                        .HasForeignKey("UserId");

                    b.Navigation("Auction");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Auction", b =>
                {
                    b.Navigation("UserAuctions");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.Product", b =>
                {
                    b.Navigation("Auctions");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("AuctionBot.Db.Models.User", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("UserAuctions");
                });
#pragma warning restore 612, 618
        }
    }
}
